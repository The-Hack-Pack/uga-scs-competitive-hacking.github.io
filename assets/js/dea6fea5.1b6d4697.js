"use strict";(self.webpackChunkmain_website=self.webpackChunkmain_website||[]).push([["9424"],{9161:function(e,s,a){a.r(s),a.d(s,{default:()=>u,frontMatter:()=>h,metadata:()=>t,assets:()=>d,toc:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"PasswordCracking/Medium/masked","title":"Masked","description":"Password Cracking | Medium - Masked","source":"@site/docs/PasswordCracking/Medium/masked.md","sourceDirName":"PasswordCracking/Medium","slug":"/PasswordCracking/Medium/masked","permalink":"/practice/PasswordCracking/Medium/masked","draft":false,"unlisted":false,"editUrl":"https://github.com/The-Hack-Pack/uga-scs-competitive-hacking.github.io/tree/development/docs/PasswordCracking/Medium/masked.md","tags":[{"inline":false,"label":"Medium","permalink":"/practice/tags/medium","description":"Medium level challenges."}],"version":"current","lastUpdatedAt":1727573534000,"sidebarPosition":0,"frontMatter":{"description":"Password Cracking | Medium - Masked","tags":["medium"],"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Medium - Pass Crack","permalink":"/practice/category/medium---pass-crack"},"next":{"title":"Hard - Pass Crack","permalink":"/practice/category/hard---pass-crack"}}'),i=a("5893"),r=a("65"),n=a("2445");let h={description:"Password Cracking | Medium - Masked",tags:["medium"],sidebar_position:0},o="Masked",d={},c=[{value:"Challenge",id:"challenge",level:2},{value:"Solution",id:"solution",level:2},{value:"Credits",id:"credits",level:2}];function l(e){let s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Details:a}=s;return a||function(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"masked",children:"Masked"})}),"\n",(0,i.jsx)(s.p,{children:"Password Cracking | Medium - Masked"}),"\n",(0,i.jsx)(s.h2,{id:"challenge",children:"Challenge"}),"\n",(0,i.jsx)(s.p,{children:"A password hash was retrieved that needs to be cracked. We have received intel that the password is of the format"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"THP-PASS-####"})}),"\n",(0,i.jsxs)(s.p,{children:["where ",(0,i.jsx)(s.code,{children:"#"})," is a number 0-9."]}),"\n",(0,i.jsxs)(s.p,{children:["Target Hash: ",(0,i.jsx)(s.code,{children:"a9fe58ebbe541f23dcb988ac47e7ee6f"})]}),"\n",(0,i.jsx)(n.Z,{hash:"0b0583b4d6ee8fe50f52b780d92d4e774c371c8d42ef73beb2dbb284f6891388acf60ea4b201ad8f8704ae3e64e07bc33e0161f922d4e475bf73f61d5522141f",algorithm:"sha512"}),"\n",(0,i.jsx)(s.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Solution Guide"}),(0,i.jsxs)(s.p,{children:["This challenge assumes you have solved the Easy challenge ",(0,i.jsx)(s.a,{href:"https://thehackpack.org/practice/PasswordCracking/Easy/rockyou",children:(0,i.jsx)(s.strong,{children:"RockYou"})})," and have a basic understanding of Hashcat. Please do that challenge and look over the solution guide before moving to this one. In RockYou, we used Hashcat to do a dictionary attack. However, we do not have a dictionary this time. We only have the password format of ",(0,i.jsx)(s.code,{children:"THP-PASS-####"})," where the 4 numbers are unknown. Therefore, we will have to do a different attack to bruteforce every single number combination possible."]}),(0,i.jsxs)(s.p,{children:["Our first step is to identify the hash type. This can be done with an online tool such as ",(0,i.jsx)(s.a,{href:"https://hashes.com/en/tools/hash_identifier",children:"https://hashes.com/en/tools/hash_identifier"}),". After submitting the hash here, we can see that it is identified as an ",(0,i.jsx)(s.strong,{children:"MD5"})," hash."]}),(0,i.jsxs)(s.p,{children:["Our next step is to crack the hash. We will be using ",(0,i.jsx)(s.strong,{children:"Hashcat"})," again for this. For the purpose of this tutorial, we will be using Kali Linux."]}),(0,i.jsxs)(s.p,{children:["Hashcat supports many hash modes, denoted by a numerical ID. We know our hash is MD5 so we just need to find the hash mode ID for it. We can find that ",(0,i.jsx)(s.a,{href:"https://hashcat.net/wiki/doku.php?id=example_hashes",children:(0,i.jsx)(s.strong,{children:"here"})}),". Upon searching for MD5 here (it's the first one), we can see the hash mode is ",(0,i.jsx)(s.code,{children:"0"}),"."]}),(0,i.jsxs)(s.p,{children:["Our next step is to choose an attack type. I encourage you to take a look at hashcat's attack modes ",(0,i.jsx)(s.a,{href:"https://hashcat.net/wiki/doku.php?id=hashcat",children:(0,i.jsx)(s.strong,{children:"here"})})," (near the bottom of the page) and figure out which one to use."]}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Reveal Attack Type"}),(0,i.jsxs)(s.p,{children:["We will need to bruteforce every single number combination for this attack. Therefore, the best attack method for this would be ",(0,i.jsx)(s.a,{href:"https://hashcat.net/wiki/doku.php?id=mask_attack",children:"Mask Attack"}),". This will let us put a ",(0,i.jsx)(s.code,{children:"mask"})," of ",(0,i.jsx)(s.code,{children:"?d"})," in place of each number we don't know to tell hashcat to hash every single combination from ",(0,i.jsx)(s.code,{children:"THP-PASS-0000"})," to ",(0,i.jsx)(s.code,{children:"THP-PASS-9999"})," and compare to the target hash."]}),(0,i.jsxs)(s.p,{children:["The ID for this is attack type is ",(0,i.jsx)(s.code,{children:"3"}),"."]})]}),(0,i.jsx)(s.p,{children:"Now we can craft our command to crack the password. The format of a hashcat attack is:"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"hashcat -a <attack-mode> -m <hash-mode> [hash] [other_options_like_mask]\n"})}),(0,i.jsx)(s.p,{children:"I encourage you to craft the command yourself by referencing the wiki for our attack type."}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Reveal Command"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"hashcat -a 3 -m 0 a9fe58ebbe541f23dcb988ac47e7ee6f THP-PASS-?d?d?d?d\n"})})]}),(0,i.jsxs)(s.p,{children:["After executing this command, hashcat will start cracking the hash by hashing every single password from ",(0,i.jsx)(s.code,{children:"THP-PASS-0000"})," to ",(0,i.jsx)(s.code,{children:"THP-PASS-9999"})," and compare with the target hash. This may take a few minutes depending on your computer but after a short while, we should see our hash cracked!"]})]}),"\n",(0,i.jsx)(s.h2,{id:"credits",children:"Credits"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Author(s): Divesh Gupta (legendile7)"}),"\n"]})]})}function u(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},2445:function(e,s,a){a.d(s,{Z:function(){return h}});var t=a(5893),i=a(7294),r=a(1354),n=a.n(r);let h=e=>{let{hash:s,algorithm:a}=e,[r,h]=(0,i.useState)(""),[o,d]=(0,i.useState)(""),c=(e,s)=>{switch(s){case"sha1":return n().SHA1(e).toString();case"sha512":return n().SHA512(e).toString();default:return e}},l=()=>{c(r,a)===s?d("Correct!"):d("Incorrect. Try again.")};return(0,t.jsxs)("div",{children:[(0,t.jsxs)("form",{onSubmit:e=>{e.preventDefault(),l()},children:[(0,t.jsx)("input",{type:"text",value:r,onChange:e=>h(e.target.value),placeholder:"Enter answer"}),(0,t.jsx)("button",{type:"submit",children:"Check"})]}),(0,t.jsx)("p",{children:o})]})}},7761:function(){}}]);