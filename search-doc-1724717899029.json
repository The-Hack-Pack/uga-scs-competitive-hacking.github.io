{"searchDocs":[{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/BlueTeam/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Broken","type":0,"sectionRef":"#","url":"/practice/Forensics/Easy/broken","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"Broken","url":"/practice/Forensics/Easy/broken#challenge","content":"  We have intercepted a dank meme. Unfortunately, it seems to be corrupted. Can you fix it?   Download file: broken.png   Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"Broken","url":"/practice/Forensics/Easy/broken#solution","content":"  Solution Guide You might have noticed that the image does not open. Let's open the image in a hex editor to see what's going on. A good online hex editor is https://hexed.it/. Upon opening the image, we can see the hexadecimal values as well as utf-8 (plaintext). The best way to see what's wrong with a corrupted file is by comparing it with another similar file. Let's open any non-corrupted PNG image in Hexedit (here's an image you can use). Upon comparing the two files, you should immediately see a difference at the very beginning of the file. Here's what it looks like for each image: Corrupted ImageSample Image The sample image beings with 89 50 4E 47 (utf-8: ëPNG) whereas the corrupted image is missing it! This is the PNG file header. It is essential for an image rendering software to identify the image type and render it. Our corrupted image is missing this header, so let's add it. We can do this in Hexedit by Right Clicking the first hex byte &gt; Insert Bytes Here &gt; 4 Bytes. Then, we manually type the header stated above. We should be able to Save as to a new image and it should now open, giving you the flag!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"Broken","url":"/practice/Forensics/Easy/broken#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"},{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/NetworkTrafficAnalysis/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Unknown","type":0,"sectionRef":"#","url":"/practice/Cryptography/Easy/unknown","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"Unknown","url":"/practice/Cryptography/Easy/unknown#challenge","content":"  We have intercepted a message written in a strange language, see if you can decrypt it.      Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"Unknown","url":"/practice/Cryptography/Easy/unknown#solution","content":"  Solution Guide Let's analyze this message further. It seems to be a symbol cipher made of some strange symbols. However, there is a way to identify this cipher with a website. info Any time you have a symbol cipher, use this website: https://www.dcode.xyz/symbols-ciphers. After scrolling and comparing the message with the ciphers on the website, you should be able to identify the type of cipher used. Reveal Cipher Unown Pokemon Alphabet Great! Now we just have to go to that cipher, input the symbols, and decrypt!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"Unknown","url":"/practice/Cryptography/Easy/unknown#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"},{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/LogAnalysis/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Intro","type":0,"sectionRef":"#","url":"/practice/intro","content":"","keywords":"","version":"Next"},{"title":"Getting Started​","type":1,"pageTitle":"Intro","url":"/practice/intro#getting-started","content":"  On the left sidebar, there are different categories of competitive cybersecurity. Under each category, there are multiple challenges ranging from Easy to Hard difficulties. Each difficulty assumes you have knowledge on the previous difficulty challenges in the category.   Click on one of them to view the challenge. There will be instructions on your goal, any available file downloads, a submission field to check your answers, and a solution guide. Use these to practice and learn!   View challenges by difficulty:   EasyMediumHardExpert   ","version":"Next","tagName":"h2"},{"title":"What you'll need​","type":1,"pageTitle":"Intro","url":"/practice/intro#what-youll-need","content":"  ","version":"Next","tagName":"h2"},{"title":"Hardware & Software​","type":1,"pageTitle":"Intro","url":"/practice/intro#hardware--software","content":"  Computer Windows with a Debian Linux VM or WSL (highly recommended)Debian Linux (Kali recommended)MacOS (not recommended)ChromeOS (not recommended) BrowserInternet &gt;25 MBPS Download Speed recommended&gt;5 MBPS Upload Speed recommended Code Editor Visual Studio Code (highly recommended)JetBrains Intellij IdeaNotepad++Terminal based (Vi/Vim, Emacs, Mousepad, etc.)Notepad (not recommended) Optional (for better performance and convenience) A GPU (Nvidia recommended if using WSL for CUDA passthrough)16+ GB RAM (8 GB also works with GPU)   ","version":"Next","tagName":"h3"},{"title":"Resources​","type":1,"pageTitle":"Intro","url":"/practice/intro#resources","content":"  Tools:   https://cybersources.glide.page/https://book.hacktricks.xyz/welcome/readme   Learning:   This Websitehttps://pwn.college/https://ctf101.org/https://nationalcyberleague.org/resourceshttps://tryhackme.com/r/hacktivitieshttps://academy.hackthebox.com/   Practice:   This WebsitePicoCTF GymNCL Gymhttps://tryhackme.com/r/hacktivities/practicehttps://academy.hackthebox.com/ ","version":"Next","tagName":"h3"},{"title":"Skyscraper","type":0,"sectionRef":"#","url":"/practice/OSI/Medium/Skyscraper","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"Skyscraper","url":"/practice/OSI/Medium/Skyscraper#challenge","content":"  We have received a photograph that needs investigation. Can you find the following information?   Download Photo   Q1. Name of the building (one word):   Check   Q2. Height of the building (number of feet):   Check   Q3. What year was this building built?   Check   Q4. What is this building's Building Identification Number (BIN)?   Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"Skyscraper","url":"/practice/OSI/Medium/Skyscraper#solution","content":"  Solution Guide The questions here involve multiple different techniques. You should be able to solve questions 1-3 with knowledge from the Easy challenges. We can use Google Images for this (Another powerful option is Yandex). Just upload the image here and it will show the building's name. You can then simply go to the Wikipedia page for this building to find its height and year it was built. Question 4 is a tricky one. It assumes you have the answers to the previous questions so proceed when you've solved those. Reveal Question 4 Solution Guide This one requires a bit more steps and some trial &amp; error, as real OSI challenges often require you to. So, we know that this building is the Flatiron building, which is in New York City. NYC has a building records website that you can find by searching it up: https://a810-dobnow.nyc.gov/publish/Index.html#!. This website can search the Public Portal for a particular building with Address, Borough, Block, Lot, and BIN. We are looking for the BIN so we obviously can't search with that. So, you have 2 options left. The problem with the Address option is that we have no clue what the House Number field is supposed to be for this building. Some searching could help you figure it out but I found it easier to use the other option (Borough, Block, Lot). This option has 3 fields: Borough, Block, and an optional Lot. To find the Borough, you can search up &quot;what borough is flatiron building in&quot;. The Block is the tricky part to find that will require trial and error. I searched up &quot;flatiron building block number&quot; in Google and browsed the results. You could potentially click and check all the initial links but if you scroll a little bit, you will find a PDF doc from the nyc.gov website which seems like a really good source to check out. Reveal Borough and Block The Borough is Manhattan. The Block can be found on this pdf: https://s-media.nyc.gov/agencies/lpc/lp/0219.pdf. One of the initial lines contains not just the Block number but also the Lot (Block: 851, Lot: 1). After you have these fields, you can now search the database with it, double click the only result, and it should give you the Flatiron Building with the BIN!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"Skyscraper","url":"/practice/OSI/Medium/Skyscraper#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"},{"title":"TV","type":0,"sectionRef":"#","url":"/practice/OSI/Easy/TV","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"TV","url":"/practice/OSI/Easy/TV#challenge","content":"  We have received a photograph that needs investigation. Can you find the following information?   Download Photo   Q1. Season &amp; Episode of the show (Format: S#E# where # is the number):   Check   Q2. Photographer Name:   Check   Q3. City where picture was taken:   Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"TV","url":"/practice/OSI/Easy/TV#solution","content":"  Solution Guide The questions here involve 2 different techniques. The first technique will be used for Question 1 which is just a simple reverse image search. We can use Google Images for this (Another powerful option is Yandex). Just upload the image here and some similar images will show on the right, containing YouTube videos which reveal the Season and Episode of the show! Questions 2 and 3 will use a different technique. We will be analyzing the image's metadata or EXIF. We can use a simple website like https://onlineexifviewer.com. Simply upload the image here and you can see the Photographer's name under the &quot;Artist&quot; field. There is also a &quot;Photo GPS Location&quot; link you can click to see where the photo was taken on Google Maps, which will give you the city!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"TV","url":"/practice/OSI/Easy/TV#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"},{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/MachineLearning/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Contribute","type":0,"sectionRef":"#","url":"/practice/contribute","content":"","keywords":"","version":"Next"},{"title":"Getting Started​","type":1,"pageTitle":"Contribute","url":"/practice/contribute#getting-started","content":"  Our GitHub repository is available here. We use a static-site generator called Docusaurus version 3.5.1, which you should familiarize yourself with first. After you have a basic understanding of the documentation, you can proceed to either make your own challenge or edit an existing one!   ","version":"Next","tagName":"h2"},{"title":"Creating a New Challenge​","type":1,"pageTitle":"Contribute","url":"/practice/contribute#creating-a-new-challenge","content":"  To make your own challenge, first fork the repository and clone it to your device. Make sure to switch your branch to development. Next, head to the docs folder from root and you will see folders for all the categories. Head to the folder for your challenge's category, then to the respective difficulty folder contained inside, and then create a text document (.md extension). Name it to your challenge's name. Then, copy-paste the template below into your doc.   tip Make sure to replace every field in ALL CAPS with your challenge's information!   Reveal Template --- description: CHALLENGE-CATEGORY | DIFFICULTY - CHALLENGE NAME tags: [DIFFICULTY-TAG-LOWERCASE] sidebar_position: INTEGER --- import PasswordForm from '@site/src/components/PasswordForm'; # CHALLENGE-NAME DESCRIPTION-FIELD-FROM-ABOVE-COPY-PASTED-HERE ## Challenge CHALLENGE-DESCRIPTION-HERE ![DOWNLOADABLE FILE](./assets/YOURFILE) &lt;!--- This is a submission form, you can have multiple ---&gt; &lt;PasswordForm hash=&quot;HASH-GOES-HERE&quot; algorithm=&quot;sha512&quot; /&gt; ## Solution &lt;details&gt; &lt;summary&gt;Solution Guide&lt;/summary&gt; SOLUTION GUIDE HERE, LEAVE BLANK LINE ABOVE. DO NOT INCLUDE ANSWERS HERE, ONLY HOW TO SOLVE. &lt;/details&gt; ## Credits - Author(s): YOUR NAME(S)    If you have any downloadble files, place them in the assets folder (which should be in the same directory as your challenge). Make sure to convert your answer(s) to SHA-512 (can be done at a site like this) and put it in the PasswordForm component(s).   note Make sure to DM one of the officers with the answer(s) to the challenge! This is required for approval!   And you're done! Make a pull request to the development branch and an officer will validate and approve you!   ","version":"Next","tagName":"h2"},{"title":"Editing an Existing Challenge​","type":1,"pageTitle":"Contribute","url":"/practice/contribute#editing-an-existing-challenge","content":"  To edit an existing challenge, you can simply click the &quot;Edit This Page&quot; link at the bottom of the challenge page. From there, you can fork the repository, edit the page, and make a pull request to the development branch. Our officer team will review the changes and publish them!   ","version":"Next","tagName":"h2"},{"title":"Have Questions?​","type":1,"pageTitle":"Contribute","url":"/practice/contribute#have-questions","content":"  Reach out to us on our Discord server! If you want to communicate privately, DM one of the officers or email us at hello@thehackpack.org. ","version":"Next","tagName":"h2"},{"title":"RockYou","type":0,"sectionRef":"#","url":"/practice/PasswordCracking/Easy/rockyou","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"RockYou","url":"/practice/PasswordCracking/Easy/rockyou#challenge","content":"  A password hash was retrieved that needs to be cracked. We have received intel that the password is from the RockYou breach.   Hash: 1a3dff6f600d9fd62f8ead361480cc61   Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"RockYou","url":"/practice/PasswordCracking/Easy/rockyou#solution","content":"  Solution Guide This challenge involves a popular list of leaked passwords from the RockYou breach. This list is preinstalled in Kali Linux (/usr/share/wordlists/rockyou.txt.gz) but can also be downloaded here. tip You don't need to unzip rockyou.txt.gz. Our first step is to identify the hash type. This can be done with an online tool such as https://hashes.com/en/tools/hash_identifier. After submitting the hash here, we can see that it is identified as an MD5 hash. Our next step is to crack the hash. We will use a tool called Hashcat for this which is preinstalled in Kali Linux but can also be downloaded here. For the purpose of this tutorial, we will be using Kali Linux. Hashcat supports many hash modes, denoted by a numerical ID. We know our hash is MD5 so we just need to find the hash mode ID for it. We can find that here. Upon searching for MD5 here (it's the first one), we can see the hash mode is 0. Our next step is to choose an attack type. Since we already have a password list (rockyou.txt), we will use a Dictionary Attack. The ID for this is attack type is 0. info You can learn more about hashcat's attack modes here (scroll to the bottom). Now we can craft our command to crack the password. The format of a hashcat attack is: hashcat -a &lt;attack-mode&gt; -m &lt;hash-mode&gt; [hash] [other_options_like_dictionary] I encourage you to craft the command yourself. Reveal Command hashcat -a 0 -m 0 1a3dff6f600d9fd62f8ead361480cc61 /usr/share/wordlists/rockyou.txt.gz After executing this command, hashcat will start cracking the hash by hashing every single password in the dictionary and comparing with our hash. This may take a few minutes but after a while, we should see our hash cracked!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"RockYou","url":"/practice/PasswordCracking/Easy/rockyou#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"},{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/WebApplicationExploitation/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Coming Soon","type":0,"sectionRef":"#","url":"/practice/Scanning&Reconnaissance/ComingSoon","content":"Coming Soon","keywords":"","version":"Next"},{"title":"Pyc","type":0,"sectionRef":"#","url":"/practice/ReverseEngineering/Easy/pyc","content":"","keywords":"","version":"Next"},{"title":"Challenge​","type":1,"pageTitle":"Pyc","url":"/practice/ReverseEngineering/Easy/pyc#challenge","content":"  We have created a python script for you to break into as training. See if you can figure out a password that will authenticate with the program.   Download file: rev.pyc   Check   ","version":"Next","tagName":"h2"},{"title":"Solution​","type":1,"pageTitle":"Pyc","url":"/practice/ReverseEngineering/Easy/pyc#solution","content":"  Solution Guide Let's analyze this file further. This file is a .pyc file, which is a Python Compiled bytecode file. Since this is compiled, we cannot read the source code just by opening it. Try runnning the program and see what happens. We will be using a Linux terminal for this tutorial. warning If you have both Python 2 and Python 3 installed, you may need to specify python3 instead of python. $ python rev.pyc After executing this, you will see that the program is asking for a password. If we try to guess a random password, we get a message of Access Denied. It seems we will have to dig further with this file. Fortunately, there are local and online PYC decompilers. One great online tool is PyLingual. After decompiling the PYC file, we can see the entire source code of the program. Reveal Source Code def caesar_shift_encrypt(text, shift): encrypted_text = '' for char in text: if char.isalpha(): shifted_char = chr((ord(char) - ord('a') + shift) % 26 + ord('a')) encrypted_text += shifted_char else: encrypted_text += char return encrypted_text def check_password(input_password): encrypted_password = 'yfwmjfpb' shift = 9 encrypted_input = caesar_shift_encrypt(input_password, shift) if encrypted_input == encrypted_password: return 'Access Granted' return 'Access Denied' input_password = input('Enter the password: ') result = check_password(input_password) print(result) Upon inspecting this python code, we can see that the script is using Caesar Cipher with a shift of 9 to encrypt the password and compare it against the ciphertext yfwmjfpb. We can easily reverse this with a website like https://www.dcode.fr/caesar-cipher and retrieve the password!   ","version":"Next","tagName":"h2"},{"title":"Credits​","type":1,"pageTitle":"Pyc","url":"/practice/ReverseEngineering/Easy/pyc#credits","content":"  Author(s): Divesh Gupta (legendile7) ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}